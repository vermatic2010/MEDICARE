{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\verma\\\\Downloads\\\\Medical Bot\\\\client\\\\src\\\\components\\\\VideoCall.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './VideoCall.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCall = ({\n  user,\n  role,\n  appointmentId,\n  onEndCall\n}) => {\n  _s();\n  const [isCallActive, setIsCallActive] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const [isVideoOff, setIsVideoOff] = useState(false);\n  const [remoteUserId, setRemoteUserId] = useState(null);\n  const [callStatus, setCallStatus] = useState('Initializing...');\n  const [currentUserId] = useState(role === 'doctor' ? 'doctor1' : 'patient1'); // Fixed user ID for testing\n\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const peerConnectionRef = useRef(null);\n  const localStreamRef = useRef(null);\n  const websocketRef = useRef(null);\n  const remoteUserIdRef = useRef(null); // Use ref to avoid closure issues\n\n  // WebRTC configuration\n  const iceServers = {\n    iceServers: [{\n      urls: 'stun:stun.l.google.com:19302'\n    }, {\n      urls: 'stun:stun1.l.google.com:19302'\n    }]\n  };\n  useEffect(() => {\n    console.log('VideoCall initialized with:', {\n      userId: currentUserId,\n      role,\n      appointmentId\n    });\n    initializeWebSocket();\n    return () => {\n      cleanup();\n    };\n  }, []);\n  const initializeWebSocket = () => {\n    // Connect to WebSocket signaling server\n    websocketRef.current = new WebSocket('ws://localhost:3002');\n    websocketRef.current.onopen = () => {\n      console.log('WebSocket connected');\n      console.log('Registering user:', {\n        userId: currentUserId,\n        role,\n        appointmentId\n      });\n\n      // Register user with server\n      websocketRef.current.send(JSON.stringify({\n        type: 'register',\n        userId: currentUserId,\n        role: role,\n        appointmentId: appointmentId\n      }));\n      setCallStatus('Ready to call');\n    };\n    websocketRef.current.onmessage = async event => {\n      const message = JSON.parse(event.data);\n      await handleSignalingMessage(message);\n    };\n    websocketRef.current.onerror = error => {\n      console.error('WebSocket error:', error);\n      setCallStatus('Connection error');\n    };\n    websocketRef.current.onclose = () => {\n      console.log('WebSocket disconnected');\n      setCallStatus('Disconnected');\n    };\n  };\n  const handleSignalingMessage = async message => {\n    switch (message.type) {\n      case 'user-registered':\n        console.log('User registered successfully');\n        setCallStatus('Connected. Looking for other participants...');\n        break;\n      case 'call-offer':\n        setCallStatus('Incoming call...');\n        setRemoteUserId(message.from);\n        remoteUserIdRef.current = message.from; // Store in ref as well\n        console.log('Call offer received from:', message.from);\n        console.log('Set remoteUserId to:', message.from);\n        await handleIncomingCall(message.offer);\n        break;\n      case 'call-answer':\n        console.log('Call answer received from:', message.from);\n        setRemoteUserId(message.from);\n        remoteUserIdRef.current = message.from; // Store in ref as well\n        await handleCallAnswer(message.answer);\n        break;\n      case 'ice-candidate':\n        await handleIceCandidate(message.candidate);\n        break;\n      case 'call-ended':\n        handleCallEnded();\n        break;\n      case 'user-joined':\n        console.log('User joined message received:', message);\n        if (message.users) {\n          const otherUsers = message.users.filter(u => u.id !== currentUserId);\n          console.log('Current user:', currentUserId, 'Other users found:', otherUsers);\n          if (otherUsers.length > 0) {\n            console.log(`Found ${otherUsers.length} other user(s) in appointment ${appointmentId}`);\n            const otherUser = otherUsers[0];\n            setRemoteUserId(otherUser.id); // Set the remote user ID\n            remoteUserIdRef.current = otherUser.id; // Store in ref as well\n\n            // Only doctor should initiate the call to avoid conflicts\n            if (role === 'doctor') {\n              setCallStatus('Patient available. Starting call...');\n              // Auto-start call as doctor with a small delay\n              setTimeout(() => {\n                console.log('Doctor initiating call to patient');\n                startCall();\n              }, 1000);\n            } else {\n              setCallStatus('Doctor available. Waiting for call...');\n              console.log('Patient waiting for doctor to initiate call');\n            }\n          } else {\n            setCallStatus(`Waiting for ${role === 'doctor' ? 'patient' : 'doctor'} to join...`);\n          }\n        }\n        break;\n      default:\n        console.log('Unknown message type:', message.type);\n    }\n  };\n  const startCall = async () => {\n    try {\n      // Prevent multiple call attempts\n      if (isCallActive) {\n        console.log('Call already active, skipping start call');\n        return;\n      }\n      setCallStatus('Starting call...');\n      console.log('Starting call initiation process');\n\n      // Get user media\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      console.log('Media stream obtained:', stream);\n      console.log('Audio tracks:', stream.getAudioTracks());\n      console.log('Video tracks:', stream.getVideoTracks());\n      localStreamRef.current = stream;\n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = stream;\n        // Ensure local video plays\n        localVideoRef.current.play().catch(e => console.log('Local video play error:', e));\n      }\n\n      // Create peer connection\n      peerConnectionRef.current = new RTCPeerConnection(iceServers);\n\n      // Add debugging for connection state\n      peerConnectionRef.current.onconnectionstatechange = () => {\n        console.log('Connection state change:', peerConnectionRef.current.connectionState);\n      };\n      peerConnectionRef.current.oniceconnectionstatechange = () => {\n        console.log('ICE connection state change:', peerConnectionRef.current.iceConnectionState);\n      };\n\n      // Add local stream to peer connection\n      stream.getTracks().forEach(track => {\n        console.log('Adding track to peer connection:', track.kind);\n        peerConnectionRef.current.addTrack(track, stream);\n      });\n\n      // Handle incoming stream\n      peerConnectionRef.current.ontrack = event => {\n        console.log('Remote stream received:', event.streams[0]);\n        const remoteStream = event.streams[0];\n        console.log('Remote audio tracks:', remoteStream.getAudioTracks());\n        console.log('Remote video tracks:', remoteStream.getVideoTracks());\n        if (remoteVideoRef.current) {\n          remoteVideoRef.current.srcObject = remoteStream;\n          // Ensure the video plays\n          remoteVideoRef.current.play().catch(e => console.log('Remote video play error:', e));\n        }\n        setIsConnected(true);\n        setCallStatus('Connected');\n      };\n\n      // Handle ICE candidates\n      peerConnectionRef.current.onicecandidate = event => {\n        if (event.candidate) {\n          safeSendMessage({\n            type: 'ice-candidate',\n            candidate: event.candidate,\n            to: remoteUserIdRef.current // Use ref value\n          });\n        }\n      };\n\n      // Create and send offer\n      const offer = await peerConnectionRef.current.createOffer();\n      await peerConnectionRef.current.setLocalDescription(offer);\n      safeSendMessage({\n        type: 'call-offer',\n        offer: offer,\n        appointmentId: appointmentId\n      });\n      setIsCallActive(true);\n      setCallStatus('Calling...');\n      console.log('Call offer sent, waiting for answer from:', remoteUserIdRef.current);\n    } catch (error) {\n      console.error('Error starting call:', error);\n      setCallStatus('Failed to start call');\n    }\n  };\n  const handleIncomingCall = async offer => {\n    try {\n      // Get user media\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      });\n      console.log('Media stream obtained (incoming call):', stream);\n      console.log('Audio tracks (incoming):', stream.getAudioTracks());\n      console.log('Video tracks (incoming):', stream.getVideoTracks());\n      localStreamRef.current = stream;\n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = stream;\n        // Ensure local video plays\n        localVideoRef.current.play().catch(e => console.log('Local video play error:', e));\n      }\n\n      // Create peer connection\n      peerConnectionRef.current = new RTCPeerConnection(iceServers);\n\n      // Add debugging for connection state\n      peerConnectionRef.current.onconnectionstatechange = () => {\n        console.log('Connection state change (incoming):', peerConnectionRef.current.connectionState);\n      };\n      peerConnectionRef.current.oniceconnectionstatechange = () => {\n        console.log('ICE connection state change (incoming):', peerConnectionRef.current.iceConnectionState);\n      };\n\n      // Add local stream\n      stream.getTracks().forEach(track => {\n        console.log('Adding track to peer connection (incoming):', track.kind);\n        peerConnectionRef.current.addTrack(track, stream);\n      });\n\n      // Handle incoming stream\n      peerConnectionRef.current.ontrack = event => {\n        console.log('Remote stream received in incoming call:', event.streams[0]);\n        const remoteStream = event.streams[0];\n        console.log('Remote audio tracks (incoming):', remoteStream.getAudioTracks());\n        console.log('Remote video tracks (incoming):', remoteStream.getVideoTracks());\n        if (remoteVideoRef.current) {\n          remoteVideoRef.current.srcObject = remoteStream;\n          // Ensure the video plays\n          remoteVideoRef.current.play().catch(e => console.log('Remote video play error:', e));\n        }\n        setIsConnected(true);\n        setCallStatus('Connected');\n      };\n\n      // Handle ICE candidates\n      peerConnectionRef.current.onicecandidate = event => {\n        if (event.candidate) {\n          safeSendMessage({\n            type: 'ice-candidate',\n            candidate: event.candidate,\n            to: remoteUserIdRef.current // Use ref value\n          });\n        }\n      };\n\n      // Set remote description and create answer\n      await peerConnectionRef.current.setRemoteDescription(offer);\n      const answer = await peerConnectionRef.current.createAnswer();\n      await peerConnectionRef.current.setLocalDescription(answer);\n      safeSendMessage({\n        type: 'call-answer',\n        answer: answer,\n        to: remoteUserIdRef.current // Use ref value\n      });\n      setIsCallActive(true);\n      setCallStatus('Connected');\n      console.log('Call answer sent to:', remoteUserIdRef.current);\n      console.log('Current remoteUserId value:', remoteUserIdRef.current);\n    } catch (error) {\n      console.error('Error handling incoming call:', error);\n      setCallStatus('Failed to answer call');\n    }\n  };\n  const handleCallAnswer = async answer => {\n    try {\n      console.log('Processing call answer, updating status to Connected');\n      await peerConnectionRef.current.setRemoteDescription(answer);\n      setIsConnected(true);\n      setCallStatus('Connected');\n    } catch (error) {\n      console.error('Error handling call answer:', error);\n    }\n  };\n  const handleIceCandidate = async candidate => {\n    try {\n      await peerConnectionRef.current.addIceCandidate(candidate);\n    } catch (error) {\n      console.error('Error handling ICE candidate:', error);\n    }\n  };\n  const endCall = () => {\n    safeSendMessage({\n      type: 'call-ended',\n      appointmentId: appointmentId\n    });\n    handleCallEnded();\n  };\n  const handleCallEnded = () => {\n    cleanup();\n    setIsCallActive(false);\n    setIsConnected(false);\n    setCallStatus('Call ended');\n    onEndCall === null || onEndCall === void 0 ? void 0 : onEndCall();\n  };\n  const toggleMute = () => {\n    if (localStreamRef.current) {\n      const audioTrack = localStreamRef.current.getAudioTracks()[0];\n      if (audioTrack) {\n        const newMutedState = !isMuted;\n        audioTrack.enabled = !newMutedState; // enabled = opposite of muted\n        setIsMuted(newMutedState);\n        console.log('Audio track enabled:', audioTrack.enabled, 'Muted state:', newMutedState);\n      } else {\n        console.log('No audio track found');\n      }\n    } else {\n      console.log('No local stream available');\n    }\n  };\n  const toggleVideo = () => {\n    if (localStreamRef.current) {\n      const videoTrack = localStreamRef.current.getVideoTracks()[0];\n      if (videoTrack) {\n        const newVideoOffState = !isVideoOff;\n        videoTrack.enabled = !newVideoOffState; // enabled = opposite of video off\n        setIsVideoOff(newVideoOffState);\n        console.log('Video track enabled:', videoTrack.enabled, 'Video off state:', newVideoOffState);\n      } else {\n        console.log('No video track found');\n      }\n    } else {\n      console.log('No local stream available');\n    }\n  };\n  const cleanup = () => {\n    if (localStreamRef.current) {\n      localStreamRef.current.getTracks().forEach(track => track.stop());\n    }\n    if (peerConnectionRef.current) {\n      peerConnectionRef.current.close();\n    }\n    if (websocketRef.current) {\n      websocketRef.current.close();\n    }\n  };\n\n  // Helper function to safely send WebSocket messages\n  const safeSendMessage = message => {\n    if (websocketRef.current && websocketRef.current.readyState === WebSocket.OPEN) {\n      websocketRef.current.send(JSON.stringify(message));\n    } else if (websocketRef.current && websocketRef.current.readyState === WebSocket.CONNECTING) {\n      // Wait for connection to open\n      setTimeout(() => safeSendMessage(message), 100);\n    } else {\n      console.warn('WebSocket not available, cannot send message:', message.type);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-call-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-call-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uFFFD Telehealth Consultation - \", role === 'doctor' ? 'Doctor' : 'Patient', \" View\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"call-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `status-indicator ${isConnected ? 'connected' : 'disconnected'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), callStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-streams\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"remote-video-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: remoteVideoRef,\n          autoPlay: true,\n          playsInline: true,\n          className: \"remote-video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), !isConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-placeholder\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"placeholder-avatar\",\n            children: \"\\uD83D\\uDC64\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Waiting for \", role === 'doctor' ? 'patient' : 'doctor', \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"local-video-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideoRef,\n          autoPlay: true,\n          playsInline: true,\n          muted: true,\n          className: \"local-video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-label\",\n          children: \"You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-controls\",\n      children: !isCallActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-call-btn\",\n        onClick: startCall,\n        disabled: callStatus.includes('error') || callStatus.includes('Disconnected'),\n        children: \"\\uD83D\\uDCDE Start Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"call-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `control-btn ${isMuted ? 'muted' : ''}`,\n          onClick: toggleMute,\n          title: isMuted ? 'Unmute' : 'Mute',\n          children: isMuted ? '🔇' : '🎤'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `control-btn ${isVideoOff ? 'video-off' : ''}`,\n          onClick: toggleVideo,\n          title: isVideoOff ? 'Turn on video' : 'Turn off video',\n          children: isVideoOff ? '📹' : '📷'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn end-call\",\n          onClick: endCall,\n          title: \"End call\",\n          children: \"\\uD83D\\uDCDE\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appointment-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Appointment ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 12\n        }, this), \" \", appointmentId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"User:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 12\n        }, this), \" \", (user === null || user === void 0 ? void 0 : user.full_name) || (user === null || user === void 0 ? void 0 : user.username) || 'Anonymous']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Role:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 12\n        }, this), \" \", role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 410,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCall, \"aNEIhlZED+ZQG2riuRld0++5ca4=\");\n_c = VideoCall;\nexport default VideoCall;\nvar _c;\n$RefreshReg$(_c, \"VideoCall\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","VideoCall","user","role","appointmentId","onEndCall","_s","isCallActive","setIsCallActive","isConnected","setIsConnected","isMuted","setIsMuted","isVideoOff","setIsVideoOff","remoteUserId","setRemoteUserId","callStatus","setCallStatus","currentUserId","localVideoRef","remoteVideoRef","peerConnectionRef","localStreamRef","websocketRef","remoteUserIdRef","iceServers","urls","console","log","userId","initializeWebSocket","cleanup","current","WebSocket","onopen","send","JSON","stringify","type","onmessage","event","message","parse","data","handleSignalingMessage","onerror","error","onclose","from","handleIncomingCall","offer","handleCallAnswer","answer","handleIceCandidate","candidate","handleCallEnded","users","otherUsers","filter","u","id","length","otherUser","setTimeout","startCall","stream","navigator","mediaDevices","getUserMedia","video","audio","getAudioTracks","getVideoTracks","srcObject","play","catch","e","RTCPeerConnection","onconnectionstatechange","connectionState","oniceconnectionstatechange","iceConnectionState","getTracks","forEach","track","kind","addTrack","ontrack","streams","remoteStream","onicecandidate","safeSendMessage","to","createOffer","setLocalDescription","setRemoteDescription","createAnswer","addIceCandidate","endCall","toggleMute","audioTrack","newMutedState","enabled","toggleVideo","videoTrack","newVideoOffState","stop","close","readyState","OPEN","CONNECTING","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","muted","onClick","disabled","includes","title","full_name","username","_c","$RefreshReg$"],"sources":["C:/Users/verma/Downloads/Medical Bot/client/src/components/VideoCall.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './VideoCall.css';\r\n\r\nconst VideoCall = ({ user, role, appointmentId, onEndCall }) => {\r\n  const [isCallActive, setIsCallActive] = useState(false);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [isVideoOff, setIsVideoOff] = useState(false);\r\n  const [remoteUserId, setRemoteUserId] = useState(null);\r\n  const [callStatus, setCallStatus] = useState('Initializing...');\r\n  const [currentUserId] = useState(role === 'doctor' ? 'doctor1' : 'patient1'); // Fixed user ID for testing\r\n  \r\n  const localVideoRef = useRef(null);\r\n  const remoteVideoRef = useRef(null);\r\n  const peerConnectionRef = useRef(null);\r\n  const localStreamRef = useRef(null);\r\n  const websocketRef = useRef(null);\r\n  const remoteUserIdRef = useRef(null); // Use ref to avoid closure issues\r\n\r\n  // WebRTC configuration\r\n  const iceServers = {\r\n    iceServers: [\r\n      { urls: 'stun:stun.l.google.com:19302' },\r\n      { urls: 'stun:stun1.l.google.com:19302' }\r\n    ]\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('VideoCall initialized with:', { \r\n      userId: currentUserId, \r\n      role, \r\n      appointmentId \r\n    });\r\n    initializeWebSocket();\r\n    return () => {\r\n      cleanup();\r\n    };\r\n  }, []);\r\n\r\n  const initializeWebSocket = () => {\r\n    // Connect to WebSocket signaling server\r\n    websocketRef.current = new WebSocket('ws://localhost:3002');\r\n    \r\n    websocketRef.current.onopen = () => {\r\n      console.log('WebSocket connected');\r\n      console.log('Registering user:', { userId: currentUserId, role, appointmentId });\r\n      \r\n      // Register user with server\r\n      websocketRef.current.send(JSON.stringify({\r\n        type: 'register',\r\n        userId: currentUserId,\r\n        role: role,\r\n        appointmentId: appointmentId\r\n      }));\r\n      setCallStatus('Ready to call');\r\n    };\r\n\r\n    websocketRef.current.onmessage = async (event) => {\r\n      const message = JSON.parse(event.data);\r\n      await handleSignalingMessage(message);\r\n    };\r\n\r\n    websocketRef.current.onerror = (error) => {\r\n      console.error('WebSocket error:', error);\r\n      setCallStatus('Connection error');\r\n    };\r\n\r\n    websocketRef.current.onclose = () => {\r\n      console.log('WebSocket disconnected');\r\n      setCallStatus('Disconnected');\r\n    };\r\n  };\r\n\r\n  const handleSignalingMessage = async (message) => {\r\n    switch (message.type) {\r\n      case 'user-registered':\r\n        console.log('User registered successfully');\r\n        setCallStatus('Connected. Looking for other participants...');\r\n        break;\r\n        \r\n      case 'call-offer':\r\n        setCallStatus('Incoming call...');\r\n        setRemoteUserId(message.from);\r\n        remoteUserIdRef.current = message.from; // Store in ref as well\r\n        console.log('Call offer received from:', message.from);\r\n        console.log('Set remoteUserId to:', message.from);\r\n        await handleIncomingCall(message.offer);\r\n        break;\r\n        \r\n      case 'call-answer':\r\n        console.log('Call answer received from:', message.from);\r\n        setRemoteUserId(message.from);\r\n        remoteUserIdRef.current = message.from; // Store in ref as well\r\n        await handleCallAnswer(message.answer);\r\n        break;\r\n        \r\n      case 'ice-candidate':\r\n        await handleIceCandidate(message.candidate);\r\n        break;\r\n        \r\n      case 'call-ended':\r\n        handleCallEnded();\r\n        break;\r\n        \r\n      case 'user-joined':\r\n        console.log('User joined message received:', message);\r\n        if (message.users) {\r\n          const otherUsers = message.users.filter(u => u.id !== currentUserId);\r\n          console.log('Current user:', currentUserId, 'Other users found:', otherUsers);\r\n          if (otherUsers.length > 0) {\r\n            console.log(`Found ${otherUsers.length} other user(s) in appointment ${appointmentId}`);\r\n            const otherUser = otherUsers[0];\r\n            setRemoteUserId(otherUser.id); // Set the remote user ID\r\n            remoteUserIdRef.current = otherUser.id; // Store in ref as well\r\n            \r\n            // Only doctor should initiate the call to avoid conflicts\r\n            if (role === 'doctor') {\r\n              setCallStatus('Patient available. Starting call...');\r\n              // Auto-start call as doctor with a small delay\r\n              setTimeout(() => {\r\n                console.log('Doctor initiating call to patient');\r\n                startCall();\r\n              }, 1000);\r\n            } else {\r\n              setCallStatus('Doctor available. Waiting for call...');\r\n              console.log('Patient waiting for doctor to initiate call');\r\n            }\r\n          } else {\r\n            setCallStatus(`Waiting for ${role === 'doctor' ? 'patient' : 'doctor'} to join...`);\r\n          }\r\n        }\r\n        break;\r\n        \r\n      default:\r\n        console.log('Unknown message type:', message.type);\r\n    }\r\n  };\r\n\r\n  const startCall = async () => {\r\n    try {\r\n      // Prevent multiple call attempts\r\n      if (isCallActive) {\r\n        console.log('Call already active, skipping start call');\r\n        return;\r\n      }\r\n      \r\n      setCallStatus('Starting call...');\r\n      console.log('Starting call initiation process');\r\n      \r\n      // Get user media\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: true\r\n      });\r\n      \r\n      console.log('Media stream obtained:', stream);\r\n      console.log('Audio tracks:', stream.getAudioTracks());\r\n      console.log('Video tracks:', stream.getVideoTracks());\r\n      \r\n      localStreamRef.current = stream;\r\n      if (localVideoRef.current) {\r\n        localVideoRef.current.srcObject = stream;\r\n        // Ensure local video plays\r\n        localVideoRef.current.play().catch(e => console.log('Local video play error:', e));\r\n      }\r\n\r\n      // Create peer connection\r\n      peerConnectionRef.current = new RTCPeerConnection(iceServers);\r\n      \r\n      // Add debugging for connection state\r\n      peerConnectionRef.current.onconnectionstatechange = () => {\r\n        console.log('Connection state change:', peerConnectionRef.current.connectionState);\r\n      };\r\n      \r\n      peerConnectionRef.current.oniceconnectionstatechange = () => {\r\n        console.log('ICE connection state change:', peerConnectionRef.current.iceConnectionState);\r\n      };\r\n      \r\n      // Add local stream to peer connection\r\n      stream.getTracks().forEach(track => {\r\n        console.log('Adding track to peer connection:', track.kind);\r\n        peerConnectionRef.current.addTrack(track, stream);\r\n      });\r\n\r\n      // Handle incoming stream\r\n      peerConnectionRef.current.ontrack = (event) => {\r\n        console.log('Remote stream received:', event.streams[0]);\r\n        const remoteStream = event.streams[0];\r\n        console.log('Remote audio tracks:', remoteStream.getAudioTracks());\r\n        console.log('Remote video tracks:', remoteStream.getVideoTracks());\r\n        \r\n        if (remoteVideoRef.current) {\r\n          remoteVideoRef.current.srcObject = remoteStream;\r\n          // Ensure the video plays\r\n          remoteVideoRef.current.play().catch(e => console.log('Remote video play error:', e));\r\n        }\r\n        setIsConnected(true);\r\n        setCallStatus('Connected');\r\n      };\r\n\r\n      // Handle ICE candidates\r\n      peerConnectionRef.current.onicecandidate = (event) => {\r\n        if (event.candidate) {\r\n          safeSendMessage({\r\n            type: 'ice-candidate',\r\n            candidate: event.candidate,\r\n            to: remoteUserIdRef.current // Use ref value\r\n          });\r\n        }\r\n      };\r\n\r\n      // Create and send offer\r\n      const offer = await peerConnectionRef.current.createOffer();\r\n      await peerConnectionRef.current.setLocalDescription(offer);\r\n      \r\n      safeSendMessage({\r\n        type: 'call-offer',\r\n        offer: offer,\r\n        appointmentId: appointmentId\r\n      });\r\n\r\n      setIsCallActive(true);\r\n      setCallStatus('Calling...');\r\n      console.log('Call offer sent, waiting for answer from:', remoteUserIdRef.current);\r\n      \r\n    } catch (error) {\r\n      console.error('Error starting call:', error);\r\n      setCallStatus('Failed to start call');\r\n    }\r\n  };\r\n\r\n  const handleIncomingCall = async (offer) => {\r\n    try {\r\n      // Get user media\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: true,\r\n        audio: true\r\n      });\r\n      \r\n      console.log('Media stream obtained (incoming call):', stream);\r\n      console.log('Audio tracks (incoming):', stream.getAudioTracks());\r\n      console.log('Video tracks (incoming):', stream.getVideoTracks());\r\n      \r\n      localStreamRef.current = stream;\r\n      if (localVideoRef.current) {\r\n        localVideoRef.current.srcObject = stream;\r\n        // Ensure local video plays\r\n        localVideoRef.current.play().catch(e => console.log('Local video play error:', e));\r\n      }\r\n\r\n      // Create peer connection\r\n      peerConnectionRef.current = new RTCPeerConnection(iceServers);\r\n      \r\n      // Add debugging for connection state\r\n      peerConnectionRef.current.onconnectionstatechange = () => {\r\n        console.log('Connection state change (incoming):', peerConnectionRef.current.connectionState);\r\n      };\r\n      \r\n      peerConnectionRef.current.oniceconnectionstatechange = () => {\r\n        console.log('ICE connection state change (incoming):', peerConnectionRef.current.iceConnectionState);\r\n      };\r\n      \r\n      // Add local stream\r\n      stream.getTracks().forEach(track => {\r\n        console.log('Adding track to peer connection (incoming):', track.kind);\r\n        peerConnectionRef.current.addTrack(track, stream);\r\n      });\r\n\r\n      // Handle incoming stream\r\n      peerConnectionRef.current.ontrack = (event) => {\r\n        console.log('Remote stream received in incoming call:', event.streams[0]);\r\n        const remoteStream = event.streams[0];\r\n        console.log('Remote audio tracks (incoming):', remoteStream.getAudioTracks());\r\n        console.log('Remote video tracks (incoming):', remoteStream.getVideoTracks());\r\n        \r\n        if (remoteVideoRef.current) {\r\n          remoteVideoRef.current.srcObject = remoteStream;\r\n          // Ensure the video plays\r\n          remoteVideoRef.current.play().catch(e => console.log('Remote video play error:', e));\r\n        }\r\n        setIsConnected(true);\r\n        setCallStatus('Connected');\r\n      };\r\n\r\n      // Handle ICE candidates\r\n      peerConnectionRef.current.onicecandidate = (event) => {\r\n        if (event.candidate) {\r\n          safeSendMessage({\r\n            type: 'ice-candidate',\r\n            candidate: event.candidate,\r\n            to: remoteUserIdRef.current // Use ref value\r\n          });\r\n        }\r\n      };\r\n\r\n      // Set remote description and create answer\r\n      await peerConnectionRef.current.setRemoteDescription(offer);\r\n      const answer = await peerConnectionRef.current.createAnswer();\r\n      await peerConnectionRef.current.setLocalDescription(answer);\r\n      \r\n      safeSendMessage({\r\n        type: 'call-answer',\r\n        answer: answer,\r\n        to: remoteUserIdRef.current // Use ref value\r\n      });\r\n\r\n      setIsCallActive(true);\r\n      setCallStatus('Connected');\r\n      console.log('Call answer sent to:', remoteUserIdRef.current);\r\n      console.log('Current remoteUserId value:', remoteUserIdRef.current);\r\n      \r\n    } catch (error) {\r\n      console.error('Error handling incoming call:', error);\r\n      setCallStatus('Failed to answer call');\r\n    }\r\n  };\r\n\r\n  const handleCallAnswer = async (answer) => {\r\n    try {\r\n      console.log('Processing call answer, updating status to Connected');\r\n      await peerConnectionRef.current.setRemoteDescription(answer);\r\n      setIsConnected(true);\r\n      setCallStatus('Connected');\r\n    } catch (error) {\r\n      console.error('Error handling call answer:', error);\r\n    }\r\n  };\r\n\r\n  const handleIceCandidate = async (candidate) => {\r\n    try {\r\n      await peerConnectionRef.current.addIceCandidate(candidate);\r\n    } catch (error) {\r\n      console.error('Error handling ICE candidate:', error);\r\n    }\r\n  };\r\n\r\n  const endCall = () => {\r\n    safeSendMessage({\r\n      type: 'call-ended',\r\n      appointmentId: appointmentId\r\n    });\r\n    handleCallEnded();\r\n  };\r\n\r\n  const handleCallEnded = () => {\r\n    cleanup();\r\n    setIsCallActive(false);\r\n    setIsConnected(false);\r\n    setCallStatus('Call ended');\r\n    onEndCall?.();\r\n  };\r\n\r\n  const toggleMute = () => {\r\n    if (localStreamRef.current) {\r\n      const audioTrack = localStreamRef.current.getAudioTracks()[0];\r\n      if (audioTrack) {\r\n        const newMutedState = !isMuted;\r\n        audioTrack.enabled = !newMutedState; // enabled = opposite of muted\r\n        setIsMuted(newMutedState);\r\n        console.log('Audio track enabled:', audioTrack.enabled, 'Muted state:', newMutedState);\r\n      } else {\r\n        console.log('No audio track found');\r\n      }\r\n    } else {\r\n      console.log('No local stream available');\r\n    }\r\n  };\r\n\r\n  const toggleVideo = () => {\r\n    if (localStreamRef.current) {\r\n      const videoTrack = localStreamRef.current.getVideoTracks()[0];\r\n      if (videoTrack) {\r\n        const newVideoOffState = !isVideoOff;\r\n        videoTrack.enabled = !newVideoOffState; // enabled = opposite of video off\r\n        setIsVideoOff(newVideoOffState);\r\n        console.log('Video track enabled:', videoTrack.enabled, 'Video off state:', newVideoOffState);\r\n      } else {\r\n        console.log('No video track found');\r\n      }\r\n    } else {\r\n      console.log('No local stream available');\r\n    }\r\n  };\r\n\r\n  const cleanup = () => {\r\n    if (localStreamRef.current) {\r\n      localStreamRef.current.getTracks().forEach(track => track.stop());\r\n    }\r\n    if (peerConnectionRef.current) {\r\n      peerConnectionRef.current.close();\r\n    }\r\n    if (websocketRef.current) {\r\n      websocketRef.current.close();\r\n    }\r\n  };\r\n\r\n  // Helper function to safely send WebSocket messages\r\n  const safeSendMessage = (message) => {\r\n    if (websocketRef.current && websocketRef.current.readyState === WebSocket.OPEN) {\r\n      websocketRef.current.send(JSON.stringify(message));\r\n    } else if (websocketRef.current && websocketRef.current.readyState === WebSocket.CONNECTING) {\r\n      // Wait for connection to open\r\n      setTimeout(() => safeSendMessage(message), 100);\r\n    } else {\r\n      console.warn('WebSocket not available, cannot send message:', message.type);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"video-call-container\">\r\n      <div className=\"video-call-header\">\r\n        <h3>� Telehealth Consultation - {role === 'doctor' ? 'Doctor' : 'Patient'} View</h3>\r\n        <div className=\"call-status\">\r\n          <span className={`status-indicator ${isConnected ? 'connected' : 'disconnected'}`}></span>\r\n          {callStatus}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"video-streams\">\r\n        <div className=\"remote-video-container\">\r\n          <video\r\n            ref={remoteVideoRef}\r\n            autoPlay\r\n            playsInline\r\n            className=\"remote-video\"\r\n          />\r\n          {!isConnected && (\r\n            <div className=\"video-placeholder\">\r\n              <div className=\"placeholder-avatar\">\r\n                👤\r\n              </div>\r\n              <p>Waiting for {role === 'doctor' ? 'patient' : 'doctor'}...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"local-video-container\">\r\n          <video\r\n            ref={localVideoRef}\r\n            autoPlay\r\n            playsInline\r\n            muted\r\n            className=\"local-video\"\r\n          />\r\n          <div className=\"video-label\">You</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"video-controls\">\r\n        {!isCallActive ? (\r\n          <button \r\n            className=\"start-call-btn\"\r\n            onClick={startCall}\r\n            disabled={callStatus.includes('error') || callStatus.includes('Disconnected')}\r\n          >\r\n            📞 Start Call\r\n          </button>\r\n        ) : (\r\n          <div className=\"call-controls\">\r\n            <button \r\n              className={`control-btn ${isMuted ? 'muted' : ''}`}\r\n              onClick={toggleMute}\r\n              title={isMuted ? 'Unmute' : 'Mute'}\r\n            >\r\n              {isMuted ? '🔇' : '🎤'}\r\n            </button>\r\n            \r\n            <button \r\n              className={`control-btn ${isVideoOff ? 'video-off' : ''}`}\r\n              onClick={toggleVideo}\r\n              title={isVideoOff ? 'Turn on video' : 'Turn off video'}\r\n            >\r\n              {isVideoOff ? '📹' : '📷'}\r\n            </button>\r\n            \r\n            <button \r\n              className=\"control-btn end-call\"\r\n              onClick={endCall}\r\n              title=\"End call\"\r\n            >\r\n              📞❌\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"appointment-info\">\r\n        <p><strong>Appointment ID:</strong> {appointmentId}</p>\r\n        <p><strong>User:</strong> {user?.full_name || user?.username || 'Anonymous'}</p>\r\n        <p><strong>Role:</strong> {role}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCall;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}